[build-system]
requires = [ "setuptools", "wheel" ]
build-backend = "setuptools.build_meta"

[tool.yapf]
align_closing_bracket_with_visual_indent = true
allow_multiline_lambdas = true
blank_line_before_nested_class_or_def = true
column_limit = 88
coalesce_brackets = true
space_between_ending_comma_and_closing_bracket = true
spaces_before_comment = 2
split_before_bitwise_operator = true
split_before_first_argument = true
split_before_logical_operator = true
split_before_named_assigns = true
split_complex_comprehension = true

[tool.pytest.ini_options]
addopts = "-rP"
log_cli = true
log_cli_level = "INFO"
log_file = "logs/pytest.log"
markers = [
    "benchmark: mark test as a benchmark",
    "deprecated: mark test as covering a deprecated feature",
    "slow: mark test as slow",
]

[tool.ruff]
src = [
    "bitsandbytes",
    "tests",
    "benchmarking"
]
target-version = "py38"
line-length = 119

[tool.ruff.lint]
select = [
    "B",    # bugbear: security warnings
    "E",    # pycodestyle (error)
    "W",    # pycodestyle (warning)
    "F",    # pyflakes
    "I",    # isort
    "ISC",  # implicit string concatenation
    "UP",   # alert you when better syntax is available in your python version
    "RUF",  # the ruff developer's own rules
]
ignore = [
    "B007",  # Loop control variable not used within the loop body (TODO: enable)
    "B028",  # Warning without stacklevel (TODO: enable)
    "E501",  # Supress line-too-long warnings: trust yapf's judgement on this one.
    "E701",  # Multiple statements on one line (TODO: enable)
    "E712",  # Allow using if x == False, as it's not always equivalent to if x.
    "E731",  # Do not use lambda
    "F841",  # Local assigned but not used (TODO: enable, these are likely bugs)
    "RUF012",  # Mutable class attribute annotations
    "ISC001",   # single-line-implicit-string-concatenation incompatible with formatter
]

[tool.ruff.lint.extend-per-file-ignores]
"**/__init__.py" = ["F401"]  # allow unused imports in __init__.py
"{benchmarking,tests}/**/*.py" = [
    "B007",
    "B011",
    "B023",
    "E701",
    "E731",
    "F841",
    "UP030",
]

[tool.ruff.lint.isort]
combine-as-imports = true
detect-same-package = true
force-sort-within-sections = true
known-first-party = ["bitsandbytes"]

[[tool.mypy.overrides]]
module = "triton.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "scipy.stats"
ignore_missing_imports = true
